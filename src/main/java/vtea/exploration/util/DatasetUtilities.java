/*
 * Copyright (C) 2023 SciJava
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package vtea.exploration.util;

import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import vtea.jdbc.H2DatabaseEngine;
import vteaobjects.MicroObject;

/**
 *
 * @author seth
 */
public class DatasetUtilities extends javax.swing.JFrame {

    /**
     * Creates new form DatasetUtilities
     */
    
    ArrayList<MicroObject> alVolumes;
    String datasetTable;

    public DatasetUtilities(String table, ArrayList<MicroObject> objects) {
          
        alVolumes = objects;
        datasetTable = table;
        
        initComponents();

    }
    
    public boolean setTable(String table){
        datasetTable = table;
        return true;
    }
    
    public boolean setObjects(ArrayList<MicroObject> objects){
        alVolumes = objects;
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jLabel1 = new javax.swing.JLabel();
        ResetObjectNumbers = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        ProgressBar = new javax.swing.JProgressBar();
        ProgressComment = new javax.swing.JLabel();

        jScrollPane1.setViewportView(jTree1);

        setTitle("Dataset Utilities");
        setMaximumSize(new java.awt.Dimension(400, 150));
        setMinimumSize(new java.awt.Dimension(400, 150));
        setPreferredSize(new java.awt.Dimension(400, 150));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Reset Object Numbers");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        getContentPane().add(jLabel1, gridBagConstraints);

        ResetObjectNumbers.setText("Reset");
        ResetObjectNumbers.setToolTipText("Resets object number to creation order.");
        ResetObjectNumbers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetObjectNumbersActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        getContentPane().add(ResetObjectNumbers, gridBagConstraints);

        jPanel1.setMaximumSize(new java.awt.Dimension(300, 50));
        jPanel1.setMinimumSize(new java.awt.Dimension(300, 50));
        jPanel1.setPreferredSize(new java.awt.Dimension(300, 50));
        jPanel1.setSize(new java.awt.Dimension(300, 50));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setMaximumSize(new java.awt.Dimension(300, 10));
        jPanel2.setMinimumSize(new java.awt.Dimension(300, 10));
        jPanel2.setPreferredSize(new java.awt.Dimension(300, 10));
        jPanel2.setRequestFocusEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new java.awt.GridBagConstraints());

        jPanel3.setMaximumSize(new java.awt.Dimension(300, 30));
        jPanel3.setPreferredSize(new java.awt.Dimension(300, 30));
        jPanel3.setSize(new java.awt.Dimension(300, 30));

        ProgressBar.setMaximumSize(new java.awt.Dimension(200, 20));
        ProgressBar.setMinimumSize(new java.awt.Dimension(200, 20));
        ProgressBar.setPreferredSize(new java.awt.Dimension(200, 20));
        ProgressBar.setSize(new java.awt.Dimension(200, 20));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(ProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        getContentPane().add(jPanel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        getContentPane().add(ProgressComment, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ResetObjectNumbersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetObjectNumbersActionPerformed
     
    JFrame frame = new JFrame();
                frame.setBackground(vtea._vtea.BUTTONBACKGROUND);
                frame.setAlwaysOnTop(false);
                Object[] options = {"Yes", "No"};
                int n = JOptionPane.showOptionDialog(frame,
                        "This will reset the object IDs in the current dataset. There is no undo. Continue?",
                        "Renumber Objects",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.WARNING_MESSAGE,
                        null,
                        options,
                        options[1]);

                if (n == JOptionPane.YES_OPTION) {
                    this.ProgressBar.setIndeterminate(false);       
                    this.ProgressBar.setMaximum(alVolumes.size());
                    this.ProgressComment.setText("Reset MicroObjects...");
                
                     for(int i = 1; i <= alVolumes.size(); i++){ 
                        this.ProgressBar.setValue(i);
                        MicroObject object = alVolumes.get(i-1);
                        object.setSerialID(i);
                }
        
                this.ProgressComment.setText("Finished...");

                } else {

                }
        
        
        
    }//GEN-LAST:event_ResetObjectNumbersActionPerformed

    /**
     * @param args the command line arguments
     */

    //new DatasetUtilities().setVisible(true);

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar ProgressBar;
    private javax.swing.JLabel ProgressComment;
    private javax.swing.JButton ResetObjectNumbers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables

}
